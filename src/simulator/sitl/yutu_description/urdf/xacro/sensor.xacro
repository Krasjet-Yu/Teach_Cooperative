<?xml version="1.0"?>  
  
<robot name="yutu_sensor" xmlns:xacro="http://www.ros.org/wiki/xacro">

	<!-- ref: https://www.guyuehome.com/34874 -->
    <!-- control module -->
    <!-- Transmission is important to link the joints and the controller -->
	
    <xacro:macro name="vel_joint_trans" params="vel_joint_name">
        <transmission name="${vel_joint_name}_trans">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="${vel_joint_name}">
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
            </joint>
            <actuator name="${vel_joint_name}_motor">
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission>
    </xacro:macro>

    <xacro:macro name="effort_joint_trans" params="effort_joint_name">
        <transmission name="${effort_joint_name}_trans">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="${effort_joint_name}" >
                <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            </joint>
            <actuator name="${effort_joint_name}_motor">
                <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
                <motorTorqueConstant>100</motorTorqueConstant>
            </actuator>
        </transmission>
    </xacro:macro>

    <!-- <xacro:vel_joint_trans vel_joint_name="left_rear_wheel_joint" />
    <xacro:vel_joint_trans vel_joint_name="right_rear_wheel_joint" /> -->

	<xacro:vel_joint_trans vel_joint_name="left_rear_wheel_joint" />
    <xacro:vel_joint_trans vel_joint_name="right_rear_wheel_joint" />

	<xacro:effort_joint_trans effort_joint_name="left_front_wheel_joint" />
    <xacro:effort_joint_trans effort_joint_name="right_front_wheel_joint" />

    <!--
    <gazebo>
		<plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
			<robotNamespace></robotNamespace>
			<robotParam>robot_description</robotParam>
      		<robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
			<legacyModeNS>true</legacyModeNS>
		</plugin>
	</gazebo>
	-->
    
    <!-- different control -->
    
    <!-- <gazebo>
        <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
            <rosDebugLevel>Debug</rosDebugLevel>
            <publishWheelTF>true</publishWheelTF>
            <robotNamespace>/</robotNamespace>
            <publishTf>1</publishTf>
            <publishWheelJointState>true</publishWheelJointState>
            <alwaysOn>true</alwaysOn>
            <updateRate>100.0</updateRate>
            <legacyMode>true</legacyMode>
            <leftJoint>left_rear_wheel_joint</leftJoint> 
            <rightJoint>right_rear_wheel_joint</rightJoint> 
            <wheelSeparation>0.2</wheelSeparation> 
            <wheelDiameter>0.54</wheelDiameter> 
            <broadcastTF>1</broadcastTF>
            <wheelTorque>30</wheelTorque>
            <wheelAcceleration>1.8</wheelAcceleration>
            <commandTopic>cmd_vel</commandTopic> 
            <odometryFrame>odom</odometryFrame> 
            <odometryTopic>odom</odometryTopic> 
            <robotBaseFrame>base_footprint</robotBaseFrame>
        </plugin>
    </gazebo> -->
    
	<gazebo>
		<plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
			<updateRate>100.0</updateRate>
			<robotNamespace></robotNamespace>
			<leftFrontJoint>left_front_wheel_joint</leftFrontJoint>
			<rightFrontJoint>right_front_wheel_joint</rightFrontJoint>
			<leftRearJoint>left_rear_wheel_joint</leftRearJoint>
			<rightRearJoint>right_rear_wheel_joint</rightRearJoint>
			<wheelSeparation>0.16</wheelSeparation>
			<wheelDiameter>0.05</wheelDiameter>
			<commandTopic>cmd_vel</commandTopic>
			<odometryTopic>odom</odometryTopic>
			<robotBaseFrame>base_footprint</robotBaseFrame>
			<odometryFrame>odom</odometryFrame>
			<torque>15</torque>
			<topicName>cmd_vel</topicName>
			<broadcastTF>1</broadcastTF>
	  	</plugin>
	</gazebo>


    <!-- camera -->
  	<gazebo reference="camera_Link">
		<sensor type="camera" name="camera1">
			<update_rate>30.0</update_rate>
			<camera name="head">
				<horizontal_fov>1.3962634</horizontal_fov>
				<image>
					<width>800</width>
					<height>800</height>
					<format>R8G8B8</format>
				</image>
				<clip>
					<near>0.02</near>
					<far>300</far>
				</clip>
				<noise>
					<type>gaussian</type>
					<!-- Noise is sampled independently per pixel on each frame.
						That pixel's noise value is added to each of its color
						channels, which at that point lie in the range [0,1]. -->
					<mean>0.0</mean>
					<stddev>0.007</stddev>
				</noise>
			</camera>
			<plugin name="camera_controller" filename="libgazebo_ros_camera.so">
				<alwaysOn>true</alwaysOn>
				<updateRate>0.0</updateRate>
				<cameraName>camera</cameraName>
				<imageTopicName>image_raw</imageTopicName>
				<cameraInfoTopicName>camera_info</cameraInfoTopicName>
				<frameName>camera_Link</frameName>
				<hackBaseline>0.07</hackBaseline>
				<distortionK1>0.0</distortionK1>
				<distortionK2>0.0</distortionK2>
				<distortionK3>0.0</distortionK3>
				<distortionT1>0.0</distortionT1>
				<distortionT2>0.0</distortionT2>
			</plugin>
		</sensor>
	</gazebo>

    <!-- <gazebo reference="lidar_Link">
		<sensor type="ray" name="head_hokuyo_sensor">
			<pose>0 0 0 0 0 0</pose>
			<visualize>false</visualize>
			<update_rate>40</update_rate>
			<ray>
				<scan>
					<horizontal>
						<samples>720</samples>
						<resolution>1</resolution>
						<min_angle>-1.570796</min_angle>
						<max_angle>1.570796</max_angle>
					</horizontal>
				</scan>
				<range>
					<min>0.10</min>
					<max>30.0</max>
					<resolution>0.01</resolution>
				</range>
				<noise>
					<type>gaussian</type>
					<mean>0.0</mean>
					<stddev>0.01</stddev>
				</noise>
			</ray>
			<plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
				<topicName>laser/scan</topicName>
				<frameName>lidar_Link</frameName>
			</plugin>
		</sensor>
	</gazebo> -->

	<gazebo reference="lidar_Link"> 
		<sensor type="ray" name="rplidar">
			<pose>0 0 0 0 0 0</pose>
			<visualize>false</visualize>
			<update_rate>5.5</update_rate>
			<ray>
				<scan>
					<horizontal>
					<samples>360</samples>
					<resolution>1</resolution>
					<min_angle>-3</min_angle>
					<max_angle>3</max_angle>
					</horizontal>
				</scan>
				<range>
					<min>0.10</min>
					<max>6.0</max>
					<resolution>0.01</resolution>
				</range>
				<noise>
					<type>gaussian</type>
					<mean>0.0</mean>
					<stddev>0.01</stddev>
				</noise>
			</ray>
			<plugin name="gazebo_rplidar" filename="libgazebo_ros_laser.so">
				<topicName>/scan</topicName>
				<frameName>lidar_Link</frameName>
			</plugin>
		</sensor>
	</gazebo>
  
</robot>